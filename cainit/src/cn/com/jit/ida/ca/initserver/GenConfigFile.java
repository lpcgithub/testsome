package cn.com.jit.ida.ca.initserver;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

public class GenConfigFile
{
	public static boolean makefileCainit()
	  {
	    File localFile = new File("./config/CAConfig.xml");
	    StringBuffer localStringBuffer = new StringBuffer(100);
	    localStringBuffer.append("<?xml version=\"1.0\" encoding=\"GBK\"?>\n");
	    localStringBuffer.append("<Config>\n");
	    localStringBuffer.append("        <keyStoreConfig>\n");
	    localStringBuffer.append("                <!-- CA签名密钥所使用的加密库类型，目前支持 \"JSOFT_LIB\"   \"JSJY05B_LIB\"   -->\n");
	    localStringBuffer.append("                <CASigningDeviceID>JSOFT_LIB</CASigningDeviceID>\n");
	    localStringBuffer.append("                <!--  在CA签名密钥使用加密机时，输入CA的签名密钥ID标识，如果<CASigningDeviceID>为JSOFT_LIB，则此项不起作用-->\n");
	    localStringBuffer.append("                <CASigningKeyID>1</CASigningKeyID>\n");
	    localStringBuffer.append("                <!-- CA签名密钥容器存储路径-->\n");
	    localStringBuffer.append("                <SigningKeyStore>./keystore/rootCert.jks</SigningKeyStore>\n");
	    localStringBuffer.append("                <!-- CA签名密钥容器密码  -->\n");
	    localStringBuffer.append("                <SigningKeyStorePWD isEncrypted=\"TRUE\"></SigningKeyStorePWD>\n");
	    localStringBuffer.append("                <!-- CA签名密钥容器密码是否要验证  -->\n");
	    localStringBuffer.append("                <SignPWDIsConfirmed>false</SignPWDIsConfirmed>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- CA通信密钥所使用的加密库类型，目前支持 \"JSOFT_LIB\"   \"JSJY05B_LIB\"   -->\n");
	    localStringBuffer.append("                <CACommDeviceID>JSOFT_LIB</CACommDeviceID>\n");
	    localStringBuffer.append("                <!--  在CA通信密钥使用加密机时，输入CA的通信密钥ID标识，如果<CACommDeviceID>为JSOFT_LIB，则此项不起作用-->\n");
	    localStringBuffer.append("                <CACommKeyID>2</CACommKeyID>\n");
	    localStringBuffer.append("                <!-- CA通信密钥容器存储路径  -->\n");
	    localStringBuffer.append("                <CommKeyStore>./keystore/commCert.jks</CommKeyStore>\n");
	    localStringBuffer.append("                <!-- CA通信密钥容器密码  -->\n");
	    localStringBuffer.append("                <CommKeyStorePWD isEncrypted=\"FALSE\">11111111</CommKeyStorePWD>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- CA超级管理员pfx证书存储路径 -->\n");
	    localStringBuffer.append("                <AdminKeyStorePath>./keystore/superAdminCert.pfx</AdminKeyStorePath>\n");
	    localStringBuffer.append("                <!-- CA审计管理员pfx证书存储路径 -->\n");
	    localStringBuffer.append("                <AuditAdminKeyStorePath>./keystore/auditAdminCert.pfx</AuditAdminKeyStorePath>\n");
	    localStringBuffer.append("        </keyStoreConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <DBConfig>\n");
	    localStringBuffer.append("                <!-- 数据库联接用的URI  -->\n");
	    localStringBuffer.append("                <Driver_URL>jdbc:oracle:thin:@192.168.9.162:1521:ca</Driver_URL>\n");
	    localStringBuffer.append("                <!-- 数据库联接用的Driver_Class  -->\n");
	    localStringBuffer.append("                <Driver_Class>oracle.jdbc.driver.OracleDriver</Driver_Class>\t\n");
	    localStringBuffer.append("                <!-- 数据库用户名  -->\n");
	    localStringBuffer.append("                <DBUser>dbuser</DBUser>\n");
	    localStringBuffer.append("                \n");
	    localStringBuffer.append("                <!-- 数据库用户密码  -->\n");
	    localStringBuffer.append("                <DBUser_PWD  isEncrypted=\"false\">dbpwd</DBUser_PWD>\t\t\n");
	    localStringBuffer.append("                <!-- 联接池大小 -->\n");
	    localStringBuffer.append("                <Maximum_Connection_Count>10</Maximum_Connection_Count>\t\t\n");
	    localStringBuffer.append("        </DBConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <LDAPConfig>\n");
	    localStringBuffer.append("                <!--  LDAP服务器地址 -->\n");
	    localStringBuffer.append("                <LDAPServerAddress>192.168.9.148</LDAPServerAddress>\n");
	    localStringBuffer.append("                <!--  LDAP服务器端口 -->\n");
	    localStringBuffer.append("                <LDAPPort>389</LDAPPort>\n");
	    localStringBuffer.append("                <!--  LDAP服务器用户DN -->\n");
	    localStringBuffer.append("                <LDAPUserDN>cn=directory manager</LDAPUserDN>\n");
	    localStringBuffer.append("                <!--  LDAP服务器用户口令 -->\n");
	    localStringBuffer.append("                <LDAP_USER_Password isEncrypted=\"TRUE\">dOpQcd1X4yg=</LDAP_USER_Password>\t\n");
	    localStringBuffer.append("        </LDAPConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <KMCConfig>\n");
	    localStringBuffer.append("                <!--  密钥管理中心server地址（没有可以不写）-->\n");
	    localStringBuffer.append("                <KMCServerAddress>192.168.9.145</KMCServerAddress>\t\t\n");
	    localStringBuffer.append("                <!--  密钥管理中心server端口（没有可以不写）-->\n");
	    localStringBuffer.append("                <KMCServerPort>40624</KMCServerPort>\t\t\t\n");
	    localStringBuffer.append("        </KMCConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <NetConfig>\n");
	    localStringBuffer.append("                <!--  服务器地址-->\n");
	    localStringBuffer.append("                <ServerAddress>192.168.9.145</ServerAddress>\t\n");
	    localStringBuffer.append("                <!-- CAServer服务器系统控制端口  -->\n");
	    localStringBuffer.append("                <ControlPort>30828</ControlPort>\t\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- CAServer RA服务监听端口  -->\n");
	    localStringBuffer.append("                <ServicePort>30829</ServicePort>\t\t\t\n");
	    localStringBuffer.append("                <!-- 接收线程数量，建议1-5  -->\n");
	    localStringBuffer.append("                <AcceptThreadCount>5</AcceptThreadCount>\t\t\n");
	    localStringBuffer.append("                <!-- 线程池最大线程数量  -->\n");
	    localStringBuffer.append("                <MaxProcessThread>50</MaxProcessThread>\t\t\n");
	    localStringBuffer.append("                <!-- CAServer服务器超时时间  -->\n");
	    localStringBuffer.append("                <ServiceTimeOut>30828</ServiceTimeOut>\t\t\n");
	    localStringBuffer.append("                <!-- Server类型  -->\n");
	    localStringBuffer.append("                <ServerType>SSL</ServerType>\t\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  Web服务器端口 -->\n");
	    localStringBuffer.append("                <WebServerPort>80</WebServerPort>\t\t\t\n");
	    localStringBuffer.append("                <!--  Web服务器的根目录 -->\n");
	    localStringBuffer.append("                <WebHomePath>./web</WebHomePath>\t\t\t\n");
	    localStringBuffer.append("                <!--  Web服务器应用程序基地址 -->\n");
	    localStringBuffer.append("                <WebAppBasePath>./webapp</WebAppBasePath>\t\t\n");
	    localStringBuffer.append("                <!--  Web服务器应用路径 -->\n");
	    localStringBuffer.append("                <WebAppPath>/EndUser</WebAppPath>\t\t\t\t\n");
	    localStringBuffer.append("                <!--  Web服务器的WebAppDocBasePath -->\n");
	    localStringBuffer.append("                <WebAppDocBasePath>EndUser</WebAppDocBasePath>\t\n");
	    localStringBuffer.append("                <!--  Web服务器的Session超时时间,单位：分钟 -->\n");
	    localStringBuffer.append("                <WebSessionTimeOut>30</WebSessionTimeOut>\t\t\n");
	    localStringBuffer.append("                <!--  Web服务器类型GENERAL是一般联接，UNILATERALISM为单向验证,建议不要修改 -->\n");
	    localStringBuffer.append("                <WebType>UNILATERALISM</WebType>\t\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  安全Web服务器端口 -->\n");
	    localStringBuffer.append("                <SecureWebServerPort>443</SecureWebServerPort>\t\t\n");
	    localStringBuffer.append("                <!--  安全Web服务器的根目录,建议不要修改 -->\n");
	    localStringBuffer.append("                <SecureWebHomePath>./web</SecureWebHomePath>\t\t\n");
	    localStringBuffer.append("                <!--  安全Web服务器应用程序基地址,建议不要修改 -->\n");
	    localStringBuffer.append("                <SecureWebAppBasePath>./webapp</SecureWebAppBasePath>\t\n");
	    localStringBuffer.append("                <!--  安全Web服务器应用路径,建议不要修改 -->\n");
	    localStringBuffer.append("                <SecureWebAppPath>/CA</SecureWebAppPath>\t\t\t\n");
	    localStringBuffer.append("                <!--  安全Web服务器的WebAppDocBasePath,建议不要修改 -->\n");
	    localStringBuffer.append("                <SecureWebAppDocBasePath>CA</SecureWebAppDocBasePath>\t\n");
	    localStringBuffer.append("                <!--  安全Web服务器的Session超时时间,单位：分钟 -->\n");
	    localStringBuffer.append("                <SecureWebSessionTimeOut>30</SecureWebSessionTimeOut>\t\n");
	    localStringBuffer.append("        </NetConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <LOGConfig>\n");
	    localStringBuffer.append("                <!--  日志文件存放路径 -->\n");
	    localStringBuffer.append("                <LOG_Path>./log</LOG_Path>\t\t\t\t\n");
	    localStringBuffer.append("        </LOGConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <CRLConfig>\n");
	    localStringBuffer.append("                <!--  CRL发布时间间隔，单位：分钟，1天＝1440分钟-->\n");
	    localStringBuffer.append("                <CRLPeriods>1440</CRLPeriods>\t\t\t\n");
	    localStringBuffer.append("                <!--  每个CRL发布点中的证书数量-->\n");
	    localStringBuffer.append("                <CertCountInCRL>300</CertCountInCRL>\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  是否发布以文件形式发布CRL-->\n");
	    localStringBuffer.append("                <CRLFilePublish>FALSE</CRLFilePublish>\t\t\n");
	    localStringBuffer.append("                <!--  是否以LDAP形式发布CRL-->\n");
	    localStringBuffer.append("                <CRLLDAPPublish>TRUE</CRLLDAPPublish>\t\t\n");
	    localStringBuffer.append("                <!-- 是否发布总CRL -->                              \n");
	    localStringBuffer.append("                <PUBALLCRL>FALSE</PUBALLCRL>                       \n");
	    localStringBuffer.append("                <!--  文件形式发布的CRL的地址-->                      \n");
	    localStringBuffer.append("                <CRLFilePath>./crl</CRLFilePath>\t\t\t\n");
	    localStringBuffer.append("                <!--  LDAP发布CRL的地址，即crl将发布在BaseDN+CRLLDAPPath的路径下-->\n");
	    localStringBuffer.append("                <CRLLDAPPath>OU=crl</CRLLDAPPath>\t\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  证书中的CDP扩展域是否写URI形式的内容-->\n");
	    localStringBuffer.append("                <CDP_URI_Publish>TRUE</CDP_URI_Publish>\t\t\n");
	    localStringBuffer.append("                <!--  证书中的CDP扩展域是否写LDAP形式的内容-->\n");
	    localStringBuffer.append("                <CDP_DN_Publish>FALSE</CDP_DN_Publish>\t\t\n");
	    localStringBuffer.append("                <!--  证书中的CDP扩展域的URI形式的内容-->\n");
	    localStringBuffer.append("                <CDP_URI>http://192.168.9.145</CDP_URI>\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- 证书中的CDP扩展是否写LDAP_URI形式内容 -->\n");
	    localStringBuffer.append("                <CDP_LDAP_URI_Publish>FALSE</CDP_LDAP_URI_Publish> \n");
	    localStringBuffer.append("                <!-- 证书中的CDP扩展域的LDAP_URI形式的内容 -->\n");
	    localStringBuffer.append("                <CDP_LDAP_URI>ldap://192.168.9.149:389</CDP_LDAP_URI>  \n");
	    localStringBuffer.append("        </CRLConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <CertConfig>\n");
	    localStringBuffer.append("                <!--  CA的证书发布周期（仅针对由于特殊原因未能即时发布的证书），单位：分钟-->\n");
	    localStringBuffer.append("                <CertPubPeriods>1</CertPubPeriods>\t\t\t\n");
	    localStringBuffer.append("                <!--  证书发布路径-->\n");
	    localStringBuffer.append("                <CertFilePath>./cert</CertFilePath>\t\t\n");
	    localStringBuffer.append("        </CertConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <CAConfig>\n");
	    localStringBuffer.append("                <!--  是否发布以文件形式发布根CA签名证书-->\n");
	    localStringBuffer.append("                <RootCertFilePublish>FALSE</RootCertFilePublish>\t\t\n");
	    localStringBuffer.append("                <!--  是否以LDAP形式发布根CA签名证书-->\n");
	    localStringBuffer.append("\t             <RootCertLDAPPublish>TRUE</RootCertLDAPPublish>\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  CA对RA请求允许的时间超前量单位：分钟-->\n");
	    localStringBuffer.append("                <TimeDifAllow>3</TimeDifAllow>\t\t\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  CA的权威机构访问信息地址-->\n");
	    localStringBuffer.append("                <AuthorityInfoAccess>http://192.168.9.145/</AuthorityInfoAccess> \t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  默认情况下，每次证书、证书实体或业务日志查询每页显示的记录数量-->\n");
	    localStringBuffer.append("                <CountPerPage>*</CountPerPage>\t\t\t\n");
	    localStringBuffer.append("                <!--  每次证书、证书实体或业务日志查询可以从数据库返回的最大记录数量，用于限制RA一次查询可以取得的最大数据量-->\n");
	    localStringBuffer.append("                <MaxCountPerPage>*</MaxCountPerPage>  \t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  系统同步时间，用于负载均衡功能，单位：分钟，“0”代表不同步-->\n");
	    localStringBuffer.append("                <Synchrointerval>*</Synchrointerval>\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  证书序列号的长度，默认：16字符-->\n");
	    localStringBuffer.append("                <CertSNLength>*</CertSNLength>\t\t\t\n");
	    localStringBuffer.append("                <!--  证书授权码的长度，默认：16字符-->\n");
	    localStringBuffer.append("                <AuthCodeLength>*</AuthCodeLength>\t\t\t\n");
	    localStringBuffer.append("                <!--  授权码有效期限，单位：天-->\n");
	    localStringBuffer.append("                <AuthCodeValidity>*</AuthCodeValidity>\t\t\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  签发证书时，使用的签名算法，目前支持“SHA1withRSAEncryption”，“MD5withRSAEncryption”-->\n");
	    localStringBuffer.append("                <CASigningAlg>SHA1withRSAEncryption</CASigningAlg>\n");
	    localStringBuffer.append("                <!--  是否应用证书更新过渡期 -->\n");
	    localStringBuffer.append("                <EnableUpdatePeriod>FALSE</EnableUpdatePeriod>\n");
	    localStringBuffer.append("        </CAConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <CSPConfig>\n");
	    localStringBuffer.append("                <!--  管理员CSP信息配置，ALL表示显示所有合理CSP信息，SPECIFY表示只显示包含指定CSP的信息 -->\n");
	    localStringBuffer.append("                <CSPAdminShowType>ALL</CSPAdminShowType>\n");
	    localStringBuffer.append("                <!--  管理员CSP信息配置，默认为以下CSP -->\n");
	    localStringBuffer.append("                <!--  当CSPAdminShowType配置为ALL时，下拉列表显示所有可用，SPECIFY表示只显示包含指定CSP的信息，没有时给出提示 -->\n");
	    localStringBuffer.append("                <CSPAdminSpecify>Microsoft Enhanced Cryptographic Provider v1.0</CSPAdminSpecify>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!--  用户CSP信息配置，ALL表示显示所有合理CSP信息，SPECIFY表示只显示包含指定CSP的信息 -->\n");
	    localStringBuffer.append("                <CSPUserShowType>ALL</CSPUserShowType>\n");
	    localStringBuffer.append("                <!--  用户CSP信息配置，默认为以下CSP -->\n");
	    localStringBuffer.append("                <!--  当CSPUserShowType配置为ALL时，下拉列表显示所有可用，SPECIFY表示只显示包含指定CSP的信息，没有时给出提示 -->\n");
	    localStringBuffer.append("                <CSPUserSpecify>Microsoft Enhanced Cryptographic Provider v1.0</CSPUserSpecify>\n");
	    localStringBuffer.append("        </CSPConfig>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("        <AutoServiceConfig>\n");
	    localStringBuffer.append("                <!-- 检查证书更新服务的周期(用于支持更新过渡期),单位:分钟，要求大于0 -->\n");
	    localStringBuffer.append("                <CheckUpdateServiceInterval>10</CheckUpdateServiceInterval>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- 是否使用自动证书归档功能 -->\n");
	    localStringBuffer.append("                <UseAutoCertArchive>FALSE</UseAutoCertArchive>\n");
	    localStringBuffer.append("                <!-- 自动证书归档周期，单位:天，如果<UseAutoCertArchive>设置为FALSE,则此项不起作用 -->\n");
	    localStringBuffer.append("                <AutoCertArchiveInterval>180</AutoCertArchiveInterval>\n");
	    localStringBuffer.append("                <!-- 归档过期时间超过此限制的证书，单位:天，例如：归档已过期365天的证书 -->\n");
	    localStringBuffer.append("                <CertAfterDays>365</CertAfterDays>\n");
	    localStringBuffer.append("\n");
	    localStringBuffer.append("                <!-- 是否使用自动日志归档功能 -->\n");
	    localStringBuffer.append("                <UseAutoLogArchive>FALSE</UseAutoLogArchive>\n");
	    localStringBuffer.append("                <!-- 自动日志归档周期，单位:天，如果<UseAutoLogArchive>设置为FALSE,则此项不起作用 -->\n");
	    localStringBuffer.append("                <AutoLogArchiveInterval>180</AutoLogArchiveInterval>\n");
	    localStringBuffer.append("                <!-- 归档距离当前日期几天前的操作日志，单位:天，例如：归档据现在365天以前的操作日志 -->\n");
	    localStringBuffer.append("                <LogBeforeDays>365</LogBeforeDays>\n");
	    localStringBuffer.append("        </AutoServiceConfig>\n");
	    localStringBuffer.append("</Config>\n");
	    try
	    {
	      FileOutputStream localFileOutputStream = new FileOutputStream("./config/CAConfig.xml");
	      localFileOutputStream.write(localStringBuffer.toString().getBytes());
	      localFileOutputStream.close();
	    }
	    catch (IOException localIOException)
	    {
	      return false;
	    }
	    return true;
	  }
  public static boolean makefile()
  {
    File localFile = new File("./config/CAConfig.xml");
    StringBuffer localStringBuffer = new StringBuffer(100);
    localStringBuffer.append("<?xml version=\"1.0\" encoding=\"GBK\"?>\n");
    localStringBuffer.append("<Config>\n");
    localStringBuffer.append("        <keyStoreConfig>\n");
    localStringBuffer.append("                <!-- CA签名密钥所使用的加密库类型，目前支持 \"JSOFT_LIB\"   \"JSJY05B_LIB\"   -->\n");
    localStringBuffer.append("                <CASigningDeviceID>JSOFT_LIB</CASigningDeviceID>\n");
    localStringBuffer.append("                <!--  在CA签名密钥使用加密机时，输入CA的签名密钥ID标识，如果<CASigningDeviceID>为JSOFT_LIB，则此项不起作用-->\n");
    localStringBuffer.append("                <CASigningKeyID>1</CASigningKeyID>\n");
    localStringBuffer.append("                <!-- CA签名密钥容器存储路径-->\n");
    localStringBuffer.append("                <SigningKeyStore>./keystore/rootCert.jks</SigningKeyStore>\n");
    localStringBuffer.append("                <!-- CA签名密钥容器密码  -->\n");
    localStringBuffer.append("                <SigningKeyStorePWD isEncrypted=\"TRUE\"></SigningKeyStorePWD>\n");
    localStringBuffer.append("                <!-- CA签名密钥容器密码是否要验证  -->\n");
    localStringBuffer.append("                <SignPWDIsConfirmed>false</SignPWDIsConfirmed>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- CA通信密钥所使用的加密库类型，目前支持 \"JSOFT_LIB\"   \"JSJY05B_LIB\"   -->\n");
    localStringBuffer.append("                <CACommDeviceID>JSOFT_LIB</CACommDeviceID>\n");
    localStringBuffer.append("                <!--  在CA通信密钥使用加密机时，输入CA的通信密钥ID标识，如果<CACommDeviceID>为JSOFT_LIB，则此项不起作用-->\n");
    localStringBuffer.append("                <CACommKeyID>2</CACommKeyID>\n");
    localStringBuffer.append("                <!-- CA通信密钥容器存储路径  -->\n");
    localStringBuffer.append("                <CommKeyStore>./keystore/commCert.jks</CommKeyStore>\n");
    localStringBuffer.append("                <!-- CA通信密钥容器密码  -->\n");
    localStringBuffer.append("                <CommKeyStorePWD isEncrypted=\"FALSE\">11111111</CommKeyStorePWD>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- CA超级管理员pfx证书存储路径 -->\n");
    localStringBuffer.append("                <AdminKeyStorePath>./keystore/superAdminCert.pfx</AdminKeyStorePath>\n");
    localStringBuffer.append("                <!-- CA审计管理员pfx证书存储路径 -->\n");
    localStringBuffer.append("                <AuditAdminKeyStorePath>./keystore/auditAdminCert.pfx</AuditAdminKeyStorePath>\n");
    localStringBuffer.append("        </keyStoreConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <DBConfig>\n");
    localStringBuffer.append("                <!-- 数据库联接用的URI  -->\n");
    localStringBuffer.append("                <Driver_URL>jdbc:oracle:thin:@192.168.9.162:1521:ca</Driver_URL>\n");
    localStringBuffer.append("                <!-- 数据库联接用的Driver_Class  -->\n");
    localStringBuffer.append("                <Driver_Class>oracle.jdbc.driver.OracleDriver</Driver_Class>\t\n");
    localStringBuffer.append("                <!-- 数据库用户名  -->\n");
    localStringBuffer.append("                <DBUser>dbuser</DBUser>\n");
    localStringBuffer.append("                \n");
    localStringBuffer.append("                <!-- 数据库用户密码  -->\n");
    localStringBuffer.append("                <DBUser_PWD  isEncrypted=\"false\">dbpwd</DBUser_PWD>\t\t\n");
    localStringBuffer.append("                <!-- 联接池大小 -->\n");
    localStringBuffer.append("                <Maximum_Connection_Count>10</Maximum_Connection_Count>\t\t\n");
    localStringBuffer.append("        </DBConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <LDAPConfig>\n");
    localStringBuffer.append("                <!--  LDAP服务器地址 -->\n");
    localStringBuffer.append("                <LDAPServerAddress>192.168.9.148</LDAPServerAddress>\n");
    localStringBuffer.append("                <!--  LDAP服务器端口 -->\n");
    localStringBuffer.append("                <LDAPPort>389</LDAPPort>\n");
    localStringBuffer.append("                <!--  LDAP服务器用户DN -->\n");
    localStringBuffer.append("                <LDAPUserDN>cn=directory manager</LDAPUserDN>\n");
    localStringBuffer.append("                <!--  LDAP服务器用户口令 -->\n");
    localStringBuffer.append("                <LDAP_USER_Password isEncrypted=\"TRUE\">dOpQcd1X4yg=</LDAP_USER_Password>\t\n");
    localStringBuffer.append("        </LDAPConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <KMCConfig>\n");
    localStringBuffer.append("                <!--  密钥管理中心server地址（没有可以不写）-->\n");
    localStringBuffer.append("                <KMCServerAddress>192.168.9.145</KMCServerAddress>\t\t\n");
    localStringBuffer.append("                <!--  密钥管理中心server端口（没有可以不写）-->\n");
    localStringBuffer.append("                <KMCServerPort>40624</KMCServerPort>\t\t\t\n");
    localStringBuffer.append("        </KMCConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <NetConfig>\n");
    localStringBuffer.append("                <!--  服务器地址-->\n");
    localStringBuffer.append("                <ServerAddress>192.168.9.145</ServerAddress>\t\n");
    localStringBuffer.append("                <!-- CAServer服务器系统控制端口  -->\n");
    localStringBuffer.append("                <ControlPort>30828</ControlPort>\t\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- CAServer RA服务监听端口  -->\n");
    localStringBuffer.append("                <ServicePort>30829</ServicePort>\t\t\t\n");
    localStringBuffer.append("                <!-- 接收线程数量，建议1-5  -->\n");
    localStringBuffer.append("                <AcceptThreadCount>5</AcceptThreadCount>\t\t\n");
    localStringBuffer.append("                <!-- 线程池最大线程数量  -->\n");
    localStringBuffer.append("                <MaxProcessThread>50</MaxProcessThread>\t\t\n");
    localStringBuffer.append("                <!-- CAServer服务器超时时间  -->\n");
    localStringBuffer.append("                <ServiceTimeOut>30828</ServiceTimeOut>\t\t\n");
    localStringBuffer.append("                <!-- Server类型  -->\n");
    localStringBuffer.append("                <ServerType>SSL</ServerType>\t\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  Web服务器端口 -->\n");
    localStringBuffer.append("                <WebServerPort>80</WebServerPort>\t\t\t\n");
    localStringBuffer.append("                <!--  Web服务器的根目录 -->\n");
    localStringBuffer.append("                <WebHomePath>./web</WebHomePath>\t\t\t\n");
    localStringBuffer.append("                <!--  Web服务器应用程序基地址 -->\n");
    localStringBuffer.append("                <WebAppBasePath>./webapp</WebAppBasePath>\t\t\n");
    localStringBuffer.append("                <!--  Web服务器应用路径 -->\n");
    localStringBuffer.append("                <WebAppPath>/EndUser</WebAppPath>\t\t\t\t\n");
    localStringBuffer.append("                <!--  Web服务器的WebAppDocBasePath -->\n");
    localStringBuffer.append("                <WebAppDocBasePath>EndUser</WebAppDocBasePath>\t\n");
    localStringBuffer.append("                <!--  Web服务器的Session超时时间,单位：分钟 -->\n");
    localStringBuffer.append("                <WebSessionTimeOut>30</WebSessionTimeOut>\t\t\n");
    localStringBuffer.append("                <!--  Web服务器类型GENERAL是一般联接，UNILATERALISM为单向验证,建议不要修改 -->\n");
    localStringBuffer.append("                <WebType>UNILATERALISM</WebType>\t\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  安全Web服务器端口 -->\n");
    localStringBuffer.append("                <SecureWebServerPort>443</SecureWebServerPort>\t\t\n");
    localStringBuffer.append("                <!--  安全Web服务器的根目录,建议不要修改 -->\n");
    localStringBuffer.append("                <SecureWebHomePath>./web</SecureWebHomePath>\t\t\n");
    localStringBuffer.append("                <!--  安全Web服务器应用程序基地址,建议不要修改 -->\n");
    localStringBuffer.append("                <SecureWebAppBasePath>./webapp</SecureWebAppBasePath>\t\n");
    localStringBuffer.append("                <!--  安全Web服务器应用路径,建议不要修改 -->\n");
    localStringBuffer.append("                <SecureWebAppPath>/CA</SecureWebAppPath>\t\t\t\n");
    localStringBuffer.append("                <!--  安全Web服务器的WebAppDocBasePath,建议不要修改 -->\n");
    localStringBuffer.append("                <SecureWebAppDocBasePath>CA</SecureWebAppDocBasePath>\t\n");
    localStringBuffer.append("                <!--  安全Web服务器的Session超时时间,单位：分钟 -->\n");
    localStringBuffer.append("                <SecureWebSessionTimeOut>30</SecureWebSessionTimeOut>\t\n");
    localStringBuffer.append("        </NetConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <LOGConfig>\n");
    localStringBuffer.append("                <!--  日志文件存放路径 -->\n");
    localStringBuffer.append("                <LOG_Path>./log</LOG_Path>\t\t\t\t\n");
    localStringBuffer.append("        </LOGConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <CRLConfig>\n");
    localStringBuffer.append("                <!--  CRL发布时间间隔，单位：分钟，1天＝1440分钟-->\n");
    localStringBuffer.append("                <CRLPeriods>1440</CRLPeriods>\t\t\t\n");
    localStringBuffer.append("                <!--  每个CRL发布点中的证书数量-->\n");
    localStringBuffer.append("                <CertCountInCRL>300</CertCountInCRL>\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  是否发布以文件形式发布CRL-->\n");
    localStringBuffer.append("                <CRLFilePublish>FALSE</CRLFilePublish>\t\t\n");
    localStringBuffer.append("                <!--  是否以LDAP形式发布CRL-->\n");
    localStringBuffer.append("                <CRLLDAPPublish>TRUE</CRLLDAPPublish>\t\t\n");
    localStringBuffer.append("                <!-- 是否发布总CRL -->                              \n");
    localStringBuffer.append("                <PUBALLCRL>FALSE</PUBALLCRL>                       \n");
    localStringBuffer.append("                <!--  文件形式发布的CRL的地址-->                      \n");
    localStringBuffer.append("                <CRLFilePath>./crl</CRLFilePath>\t\t\t\n");
    localStringBuffer.append("                <!--  LDAP发布CRL的地址，即crl将发布在BaseDN+CRLLDAPPath的路径下-->\n");
    localStringBuffer.append("                <CRLLDAPPath>OU=crl</CRLLDAPPath>\t\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  证书中的CDP扩展域是否写URI形式的内容-->\n");
    localStringBuffer.append("                <CDP_URI_Publish>TRUE</CDP_URI_Publish>\t\t\n");
    localStringBuffer.append("                <!--  证书中的CDP扩展域是否写LDAP形式的内容-->\n");
    localStringBuffer.append("                <CDP_DN_Publish>FALSE</CDP_DN_Publish>\t\t\n");
    localStringBuffer.append("                <!--  证书中的CDP扩展域的URI形式的内容-->\n");
    localStringBuffer.append("                <CDP_URI>http://192.168.9.145</CDP_URI>\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- 证书中的CDP扩展是否写LDAP_URI形式内容 -->\n");
    localStringBuffer.append("                <CDP_LDAP_URI_Publish>FALSE</CDP_LDAP_URI_Publish> \n");
    localStringBuffer.append("                <!-- 证书中的CDP扩展域的LDAP_URI形式的内容 -->\n");
    localStringBuffer.append("                <CDP_LDAP_URI>ldap://192.168.9.149:389</CDP_LDAP_URI>  \n");
    localStringBuffer.append("        </CRLConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <CertConfig>\n");
    localStringBuffer.append("                <!--  CA的证书发布周期（仅针对由于特殊原因未能即时发布的证书），单位：分钟-->\n");
    localStringBuffer.append("                <CertPubPeriods>1</CertPubPeriods>\t\t\t\n");
    localStringBuffer.append("                <!--  证书发布路径-->\n");
    localStringBuffer.append("                <CertFilePath>./cert</CertFilePath>\t\t\n");
    localStringBuffer.append("        </CertConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <CAConfig>\n");
    localStringBuffer.append("                <!--  是否发布以文件形式发布根CA签名证书-->\n");
    localStringBuffer.append("                <RootCertFilePublish>FALSE</RootCertFilePublish>\t\t\n");
    localStringBuffer.append("                <!--  是否以LDAP形式发布根CA签名证书-->\n");
    localStringBuffer.append("\t             <RootCertLDAPPublish>TRUE</RootCertLDAPPublish>\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  CA对RA请求允许的时间超前量单位：分钟-->\n");
    localStringBuffer.append("                <TimeDifAllow>3</TimeDifAllow>\t\t\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  CA的权威机构访问信息地址-->\n");
    localStringBuffer.append("                <AuthorityInfoAccess>http://192.168.9.145/</AuthorityInfoAccess> \t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  默认情况下，每次证书、证书实体或业务日志查询每页显示的记录数量-->\n");
    localStringBuffer.append("                <CountPerPage>*</CountPerPage>\t\t\t\n");
    localStringBuffer.append("                <!--  每次证书、证书实体或业务日志查询可以从数据库返回的最大记录数量，用于限制RA一次查询可以取得的最大数据量-->\n");
    localStringBuffer.append("                <MaxCountPerPage>*</MaxCountPerPage>  \t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  系统同步时间，用于负载均衡功能，单位：分钟，“0”代表不同步-->\n");
    localStringBuffer.append("                <Synchrointerval>*</Synchrointerval>\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  证书序列号的长度，默认：16字符-->\n");
    localStringBuffer.append("                <CertSNLength>*</CertSNLength>\t\t\t\n");
    localStringBuffer.append("                <!--  证书授权码的长度，默认：16字符-->\n");
    localStringBuffer.append("                <AuthCodeLength>*</AuthCodeLength>\t\t\t\n");
    localStringBuffer.append("                <!--  授权码有效期限，单位：天-->\n");
    localStringBuffer.append("                <AuthCodeValidity>*</AuthCodeValidity>\t\t\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  签发证书时，使用的签名算法，目前支持“SHA1withRSAEncryption”，“MD5withRSAEncryption”-->\n");
    localStringBuffer.append("                <CASigningAlg>SHA1withRSAEncryption</CASigningAlg>\n");
    localStringBuffer.append("                <!--  是否应用证书更新过渡期 -->\n");
    localStringBuffer.append("                <EnableUpdatePeriod>FALSE</EnableUpdatePeriod>\n");
    localStringBuffer.append("        </CAConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <CSPConfig>\n");
    localStringBuffer.append("                <!--  管理员CSP信息配置，ALL表示显示所有合理CSP信息，SPECIFY表示只显示包含指定CSP的信息 -->\n");
    localStringBuffer.append("                <CSPAdminShowType>ALL</CSPAdminShowType>\n");
    localStringBuffer.append("                <!--  管理员CSP信息配置，默认为以下CSP -->\n");
    localStringBuffer.append("                <!--  当CSPAdminShowType配置为ALL时，下拉列表显示所有可用，SPECIFY表示只显示包含指定CSP的信息，没有时给出提示 -->\n");
    localStringBuffer.append("                <CSPAdminSpecify>Microsoft Enhanced Cryptographic Provider v1.0</CSPAdminSpecify>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!--  用户CSP信息配置，ALL表示显示所有合理CSP信息，SPECIFY表示只显示包含指定CSP的信息 -->\n");
    localStringBuffer.append("                <CSPUserShowType>ALL</CSPUserShowType>\n");
    localStringBuffer.append("                <!--  用户CSP信息配置，默认为以下CSP -->\n");
    localStringBuffer.append("                <!--  当CSPUserShowType配置为ALL时，下拉列表显示所有可用，SPECIFY表示只显示包含指定CSP的信息，没有时给出提示 -->\n");
    localStringBuffer.append("                <CSPUserSpecify>Microsoft Enhanced Cryptographic Provider v1.0</CSPUserSpecify>\n");
    localStringBuffer.append("        </CSPConfig>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("        <AutoServiceConfig>\n");
    localStringBuffer.append("                <!-- 检查证书更新服务的周期(用于支持更新过渡期),单位:分钟，要求大于0 -->\n");
    localStringBuffer.append("                <CheckUpdateServiceInterval>10</CheckUpdateServiceInterval>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- 是否使用自动证书归档功能 -->\n");
    localStringBuffer.append("                <UseAutoCertArchive>FALSE</UseAutoCertArchive>\n");
    localStringBuffer.append("                <!-- 自动证书归档周期，单位:天，如果<UseAutoCertArchive>设置为FALSE,则此项不起作用 -->\n");
    localStringBuffer.append("                <AutoCertArchiveInterval>180</AutoCertArchiveInterval>\n");
    localStringBuffer.append("                <!-- 归档过期时间超过此限制的证书，单位:天，例如：归档已过期365天的证书 -->\n");
    localStringBuffer.append("                <CertAfterDays>365</CertAfterDays>\n");
    localStringBuffer.append("\n");
    localStringBuffer.append("                <!-- 是否使用自动日志归档功能 -->\n");
    localStringBuffer.append("                <UseAutoLogArchive>FALSE</UseAutoLogArchive>\n");
    localStringBuffer.append("                <!-- 自动日志归档周期，单位:天，如果<UseAutoLogArchive>设置为FALSE,则此项不起作用 -->\n");
    localStringBuffer.append("                <AutoLogArchiveInterval>180</AutoLogArchiveInterval>\n");
    localStringBuffer.append("                <!-- 归档距离当前日期几天前的操作日志，单位:天，例如：归档据现在365天以前的操作日志 -->\n");
    localStringBuffer.append("                <LogBeforeDays>365</LogBeforeDays>\n");
    localStringBuffer.append("        </AutoServiceConfig>\n");
    localStringBuffer.append("</Config>\n");
    try
    {
      FileOutputStream localFileOutputStream = new FileOutputStream("./config/CAConfig.xml");
      localFileOutputStream.write(localStringBuffer.toString().getBytes());
      localFileOutputStream.close();
    }
    catch (IOException localIOException)
    {
      return false;
    }
    return true;
  }
}

/* Location:           C:\Program Files\JIT\CA50\lib\IDA\ida.jar
 * Qualified Name:     cn.com.jit.ida.ca.initserver.genConfigFile
 * JD-Core Version:    0.6.0
 */